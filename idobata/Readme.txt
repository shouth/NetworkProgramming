# 使用法

**コンパイル**
```
gcc main.c idobata_server.c idobata_client.c logger.c -lmynet -Imynet -o idobata
```

**実行方法**
```
./idobata -u <user-name> [-p <port-number>] [-l <log-level>] [-c] [-h]
```

- `-u <user-name>` ユーザー名を指定します．
- `-p <port-number>` サーバーのポート番号を指定します．デフォルトは `50001` です．
- `-l <log-level>` 出力するログのレベルを，レベルの高い順から `NONE`， `FATAL`，`ERROR`，`WARN`，`INFO`，`DEBUG`，`TRACE` の中から指定します．
  指定されたログレベルよりも高いレベルのログのみを出力します．デフォルトは `INFO` です．
- `-c` ログのカラー出力を無効化します．
- `-h` ヘルプメッセージを出力します．

# プログラムの特徴

- ログ出力をレベル分けして動作確認により役立つようにしました．
- サーバー及びクライアントの実装でそれぞれ通信に関する情報をcontextオブジェクトにまとめることで取り回しをよくしました．
- 機能でファイルを分割して処理を追いやすくしました．

# 苦労した点

- `select()` の第一引数として渡す変数の更新処理を忘れたせいで，クライアントは接続できたのに送信した文字列をサーバーが
  読み取らない事象が発生してやや苦労した．
- データ構造の取り回しでマクロを導入したので，コードはスッキリしたものの引数の型を間違えたときに具体的に何処が間違っている
  のかを切り分けるのに時間がかかった．
